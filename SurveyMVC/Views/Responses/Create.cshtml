@model SurveyMVC.Models.ResponseViewModel

@{
    ViewBag.Title = "Create";
    //Model.Survey = ViewBag.Survey as SurveyMVC.Models.Survey;
    //SurveyMVC.Models.Survey survey = ViewBag.Survey;
}

<style>
    .btn-success {
        background-color: #28a745;
        border: none;
        color: white;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }
</style>


<h2>Respond</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <br />
    <h5>@Html.DisplayFor(model => model.SurveyTitle) </h5>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SurveyId)
    <div class="form-group">
        <h4 style="margin-top: 50px;">Answers</h4>
        <ul class="answers-list" id="answersContainer">
            @for (int i = 0; i < (Model.Questions as List<SurveyMVC.Models.Question>).Count; i++)
            {
                <li class="answer-item" data-index="@(i)">
                    <p>@((Model.Questions as List<SurveyMVC.Models.Question>)[i].QuestionDetails)</p>
                    <input type="text" name="Answers"
                           class="form-control answer-input"
                           placeholder="Enter answer text" required />
                </li>
            }
        </ul>
    </div>

    <div class="form-group mt-4 d-flex justify-content-end gap-2">
        <input type="submit" value="Submit" class="btn btn-success px-4" />
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary px-4" })
    </div>
</div>
        }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
